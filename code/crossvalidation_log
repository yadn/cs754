bestcv = 0;
for c = [0.1 1 10]
  for g = [1 10 100]
    cmd = ['-v 10 -h 0 -c ', num2str(c), ' -g ', num2str(g)];
    cv = svmtrain(Ytrain, Xtrain, cmd);
    if (cv >= bestcv),
      bestcv = cv; bestc =c; bestg = g;
    end
    fprintf('%g %g %g (best c=%g, g=%g, rate=%g)\n', log2c, log2g, cv, bestc, bestg, bestcv);
  end
end
..*
optimization finished, #iter = 2301
nu = 0.165058
obj = -393.219381, rho = 0.992196
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2324
nu = 0.164988
obj = -393.026136, rho = 0.992259
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2275
nu = 0.165058
obj = -393.211187, rho = 0.991885
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2299
nu = 0.164988
obj = -393.016387, rho = 0.991983
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2333
nu = 0.165065
obj = -393.217780, rho = 0.992090
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2269
nu = 0.164981
obj = -393.010445, rho = 0.991871
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2314
nu = 0.165065
obj = -393.220340, rho = 0.992128
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2313
nu = 0.164981
obj = -393.017528, rho = 0.991988
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2278
nu = 0.165065
obj = -393.213364, rho = 0.992022
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2298
nu = 0.164988
obj = -393.010610, rho = 0.991910
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 91.7488%
1 -1 91.7488 (best c=0.1, g=1, rate=91.7488)
..*
optimization finished, #iter = 2559
nu = 0.165058
obj = -391.673541, rho = 0.922805
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2528
nu = 0.164988
obj = -391.524832, rho = 0.923048
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2524
nu = 0.165058
obj = -391.602349, rho = 0.919629
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2545
nu = 0.164988
obj = -391.451066, rho = 0.920803
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2518
nu = 0.165065
obj = -391.636472, rho = 0.921111
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2534
nu = 0.164981
obj = -391.401150, rho = 0.919727
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2519
nu = 0.165065
obj = -391.669517, rho = 0.921859
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2544
nu = 0.164981
obj = -391.450026, rho = 0.920660
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2528
nu = 0.165065
obj = -391.625183, rho = 0.920846
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2520
nu = 0.164988
obj = -391.383029, rho = 0.919266
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 91.7488%
1 -1 91.7488 (best c=0.1, g=10, rate=91.7488)
..*
optimization finished, #iter = 2562
nu = 0.165058
obj = -376.334786, rho = 0.237648
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2537
nu = 0.164988
obj = -376.637983, rho = 0.240352
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2536
nu = 0.165058
obj = -375.621482, rho = 0.206445
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2547
nu = 0.164988
obj = -375.911305, rho = 0.217910
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2531
nu = 0.165065
obj = -375.967503, rho = 0.220579
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2544
nu = 0.164981
obj = -375.416286, rho = 0.208072
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2546
nu = 0.165065
obj = -376.305111, rho = 0.229099
nSV = 3935, nBSV = 3933
Total nSV = 3935
..*
optimization finished, #iter = 2548
nu = 0.164981
obj = -375.898654, rho = 0.216390
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2539
nu = 0.165065
obj = -375.855542, rho = 0.219173
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2540
nu = 0.164988
obj = -375.246924, rho = 0.203920
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 92.0622%
1 -1 92.0622 (best c=0.1, g=100, rate=92.0622)
..*
optimization finished, #iter = 2551
nu = 0.165058
obj = -3916.715111, rho = 0.922701
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2521
nu = 0.164988
obj = -3915.228614, rho = 0.922926
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2517
nu = 0.165058
obj = -3916.004754, rho = 0.919542
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2540
nu = 0.164988
obj = -3914.493111, rho = 0.920732
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2516
nu = 0.165065
obj = -3916.345907, rho = 0.921022
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2533
nu = 0.164981
obj = -3913.993747, rho = 0.919773
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2515
nu = 0.165065
obj = -3916.676538, rho = 0.921767
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2540
nu = 0.164981
obj = -3914.481858, rho = 0.920543
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2521
nu = 0.165065
obj = -3916.231371, rho = 0.920727
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2524
nu = 0.164988
obj = -3913.816410, rho = 0.919236
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 91.7488%
1 -1 91.7488 (best c=0.1, g=100, rate=92.0622)
..*
optimization finished, #iter = 2560
nu = 0.165058
obj = -3761.449697, rho = 0.228814
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2536
nu = 0.164988
obj = -3764.614641, rho = 0.231027
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2536
nu = 0.165058
obj = -3754.356285, rho = 0.197285
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2548
nu = 0.164988
obj = -3757.250846, rho = 0.208820
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2530
nu = 0.165065
obj = -3757.791095, rho = 0.211428
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2543
nu = 0.164981
obj = -3752.240834, rho = 0.199009
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2548
nu = 0.165065
obj = -3761.200478, rho = 0.219794
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2550
nu = 0.164981
obj = -3757.150810, rho = 0.207398
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2540
nu = 0.165065
obj = -3756.692285, rho = 0.210228
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2540
nu = 0.164988
obj = -3750.495204, rho = 0.194499
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 92.0773%
1 -1 92.0773 (best c=1, g=10, rate=92.0773)
..*
optimization finished, #iter = 2255
nu = 0.143530
obj = -3200.230521, rho = -1.039475
nSV = 3427, nBSV = 3414
Total nSV = 3427
..*
optimization finished, #iter = 2247
nu = 0.143903
obj = -3206.743263, rho = -1.131800
nSV = 3433, nBSV = 3424
Total nSV = 3433
..*
optimization finished, #iter = 2242
nu = 0.142650
obj = -3179.694342, rho = -1.156257
nSV = 3402, nBSV = 3395
Total nSV = 3402
..*
optimization finished, #iter = 2257
nu = 0.143235
obj = -3194.092046, rho = -1.159488
nSV = 3421, nBSV = 3407
Total nSV = 3421
..*
optimization finished, #iter = 2253
nu = 0.143269
obj = -3193.298435, rho = -1.101649
nSV = 3423, nBSV = 3406
Total nSV = 3423
..*
optimization finished, #iter = 2239
nu = 0.142704
obj = -3181.440502, rho = -1.123129
nSV = 3408, nBSV = 3393
Total nSV = 3408
..*
optimization finished, #iter = 2264
nu = 0.143455
obj = -3197.402043, rho = -1.092108
nSV = 3428, nBSV = 3408
Total nSV = 3428
..*
optimization finished, #iter = 2257
nu = 0.143080
obj = -3191.486757, rho = -1.159802
nSV = 3416, nBSV = 3405
Total nSV = 3416
..*
optimization finished, #iter = 2247
nu = 0.143060
obj = -3184.073412, rho = -1.114975
nSV = 3415, nBSV = 3404
Total nSV = 3415
..*
optimization finished, #iter = 2247
nu = 0.142667
obj = -3180.980354, rho = -1.105246
nSV = 3406, nBSV = 3389
Total nSV = 3406
Cross Validation Accuracy = 93.8031%
1 -1 93.8031 (best c=1, g=100, rate=93.8031)
..*
optimization finished, #iter = 2564
nu = 0.165058
obj = -37612.586596, rho = 0.227832
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2539
nu = 0.164988
obj = -37644.376756, rho = 0.230205
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2531
nu = 0.165058
obj = -37541.699042, rho = 0.196124
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2551
nu = 0.164988
obj = -37570.637293, rho = 0.207706
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2532
nu = 0.165065
obj = -37576.013126, rho = 0.210428
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2540
nu = 0.164981
obj = -37520.478965, rho = 0.198199
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2549
nu = 0.165065
obj = -37610.145768, rho = 0.218942
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2553
nu = 0.164981
obj = -37569.657965, rho = 0.206278
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2539
nu = 0.165065
obj = -37565.048959, rho = 0.209305
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2537
nu = 0.164988
obj = -37502.956970, rho = 0.193558
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 92.0811%
1 -1 92.0811 (best c=1, g=100, rate=93.8031)
..*
optimization finished, #iter = 2256
nu = 0.143467
obj = -31993.622084, rho = -1.049480
nSV = 3428, nBSV = 3413
Total nSV = 3428
..*
optimization finished, #iter = 2259
nu = 0.143845
obj = -32059.892698, rho = -1.139556
nSV = 3435, nBSV = 3418
Total nSV = 3435
..*
optimization finished, #iter = 2245
nu = 0.142583
obj = -31790.096892, rho = -1.163911
nSV = 3404, nBSV = 3391
Total nSV = 3404
..*
optimization finished, #iter = 2266
nu = 0.143181
obj = -31933.673785, rho = -1.168244
nSV = 3419, nBSV = 3403
Total nSV = 3419
..*
optimization finished, #iter = 2244
nu = 0.143191
obj = -31925.492611, rho = -1.115425
nSV = 3421, nBSV = 3408
Total nSV = 3421
..*
optimization finished, #iter = 2239
nu = 0.142633
obj = -31806.929248, rho = -1.132375
nSV = 3412, nBSV = 3390
Total nSV = 3412
..*
optimization finished, #iter = 2258
nu = 0.143400
obj = -31966.008612, rho = -1.100370
nSV = 3425, nBSV = 3408
Total nSV = 3425
..*
optimization finished, #iter = 2254
nu = 0.143018
obj = -31907.477341, rho = -1.168196
nSV = 3415, nBSV = 3402
Total nSV = 3415
..*
optimization finished, #iter = 2242
nu = 0.143011
obj = -31833.599182, rho = -1.124911
nSV = 3417, nBSV = 3401
Total nSV = 3417
..*
optimization finished, #iter = 2241
nu = 0.142573
obj = -31801.994561, rho = -1.115766
nSV = 3405, nBSV = 3391
Total nSV = 3405
Cross Validation Accuracy = 93.7993%
1 -1 93.7993 (best c=1, g=100, rate=93.8031)
..*
optimization finished, #iter = 2041
nu = 0.122477
obj = -27892.841143, rho = 0.172162
nSV = 2945, nBSV = 2890
Total nSV = 2945
.*
optimization finished, #iter = 1985
nu = 0.122661
obj = -27970.162426, rho = -0.648243
nSV = 2946, nBSV = 2898
Total nSV = 2946
.*
optimization finished, #iter = 1988
nu = 0.121638
obj = -27760.027631, rho = -0.859768
nSV = 2921, nBSV = 2881
Total nSV = 2921
..*
optimization finished, #iter = 2068
nu = 0.122444
obj = -27909.537899, rho = -0.415842
nSV = 2948, nBSV = 2891
Total nSV = 2948
..*
optimization finished, #iter = 2026
nu = 0.122055
obj = -27819.084705, rho = 0.029017
nSV = 2935, nBSV = 2885
Total nSV = 2935
..*
optimization finished, #iter = 2005
nu = 0.121674
obj = -27752.108795, rho = -0.476028
nSV = 2924, nBSV = 2877
Total nSV = 2924
..*
optimization finished, #iter = 2060
nu = 0.122313
obj = -27863.139273, rho = -0.480667
nSV = 2939, nBSV = 2888
Total nSV = 2939
..*
optimization finished, #iter = 2009
nu = 0.122042
obj = -27872.679983, rho = -0.872277
nSV = 2932, nBSV = 2888
Total nSV = 2932
..*
optimization finished, #iter = 2004
nu = 0.121506
obj = -27637.672828, rho = -0.502062
nSV = 2918, nBSV = 2874
Total nSV = 2918
..*
optimization finished, #iter = 2025
nu = 0.121645
obj = -27765.539531, rho = -0.308287
nSV = 2920, nBSV = 2872
Total nSV = 2920
Cross Validation Accuracy = 94.6037%
1 -1 94.6037 (best c=10, g=100, rate=94.6037)
diary off
bestcv = 0;
for c = [5 30 50 ]
  for g = [50 100]
    cmd = ['-v 10 -h 0 -c ', num2str(c), ' -g ', num2str(g)];
    cv = svmtrain(Ytrain, Xtrain, cmd);
    if (cv >= bestcv),
      bestcv = cv; bestc =c; bestg = g;
    end
    fprintf('%g %g %g (best c=%g, g=%g, rate=%g)\n', log2c, log2g, cv, bestc, bestg, bestcv);
  end
end
..*
optimization finished, #iter = 2112
nu = 0.134184
obj = -15043.342550, rho = -1.061681
nSV = 3210, nBSV = 3185
Total nSV = 3210
..*
optimization finished, #iter = 2128
nu = 0.134505
obj = -15069.508563, rho = -1.237687
nSV = 3222, nBSV = 3191
Total nSV = 3222
..*
optimization finished, #iter = 2115
nu = 0.133440
obj = -14944.268148, rho = -1.442267
nSV = 3196, nBSV = 3166
Total nSV = 3196
..*
optimization finished, #iter = 2112
nu = 0.133960
obj = -15026.926656, rho = -1.310079
nSV = 3203, nBSV = 3182
Total nSV = 3203
..*
optimization finished, #iter = 2108
nu = 0.134020
obj = -15007.031003, rho = -1.215353
nSV = 3208, nBSV = 3182
Total nSV = 3208
..*
optimization finished, #iter = 2120
nu = 0.133550
obj = -14961.470901, rho = -1.281188
nSV = 3198, nBSV = 3170
Total nSV = 3198
..*
optimization finished, #iter = 2126
nu = 0.134119
obj = -15026.703700, rho = -1.215624
nSV = 3208, nBSV = 3181
Total nSV = 3208
..*
optimization finished, #iter = 2131
nu = 0.133908
obj = -15004.889027, rho = -1.354336
nSV = 3206, nBSV = 3176
Total nSV = 3206
..*
optimization finished, #iter = 2092
nu = 0.133563
obj = -14932.408413, rho = -1.303240
nSV = 3192, nBSV = 3171
Total nSV = 3192
..*
optimization finished, #iter = 2116
nu = 0.133466
obj = -14958.479470, rho = -1.180492
nSV = 3196, nBSV = 3169
Total nSV = 3196
Cross Validation Accuracy = 94.1354%
1 -1 94.1354 (best c=5, g=50, rate=94.1354)
..*
optimization finished, #iter = 2046
nu = 0.127878
obj = -14442.228822, rho = -0.973260
nSV = 3068, nBSV = 3028
Total nSV = 3068
..*
optimization finished, #iter = 2025
nu = 0.127995
obj = -14471.568034, rho = -1.205260
nSV = 3064, nBSV = 3033
Total nSV = 3064
..*
optimization finished, #iter = 2013
nu = 0.126811
obj = -14352.813309, rho = -1.355107
nSV = 3041, nBSV = 3003
Total nSV = 3041
..*
optimization finished, #iter = 2041
nu = 0.127668
obj = -14438.656556, rho = -1.178631
nSV = 3058, nBSV = 3027
Total nSV = 3058
..*
optimization finished, #iter = 2045
nu = 0.127553
obj = -14401.430633, rho = -1.001556
nSV = 3058, nBSV = 3018
Total nSV = 3058
..*
optimization finished, #iter = 2020
nu = 0.127113
obj = -14362.506670, rho = -1.185966
nSV = 3049, nBSV = 3011
Total nSV = 3049
..*
optimization finished, #iter = 2026
nu = 0.127669
obj = -14424.554355, rho = -1.140784
nSV = 3058, nBSV = 3026
Total nSV = 3058
..*
optimization finished, #iter = 2046
nu = 0.127398
obj = -14410.752180, rho = -1.339492
nSV = 3055, nBSV = 3017
Total nSV = 3055
..*
optimization finished, #iter = 2015
nu = 0.126803
obj = -14314.830501, rho = -1.120834
nSV = 3039, nBSV = 3003
Total nSV = 3039
..*
optimization finished, #iter = 2040
nu = 0.127121
obj = -14362.829255, rho = -1.122329
nSV = 3047, nBSV = 3008
Total nSV = 3047
Cross Validation Accuracy = 94.4035%
1 -1 94.4035 (best c=5, g=100, rate=94.4035)
..*
optimization finished, #iter = 2084
nu = 0.119751
obj = -82214.272865, rho = 1.477609
nSV = 2883, nBSV = 2820
Total nSV = 2883
..*
optimization finished, #iter = 2072
nu = 0.119875
obj = -82498.212904, rho = 0.125496
nSV = 2880, nBSV = 2826
Total nSV = 2880
..*
optimization finished, #iter = 2125
nu = 0.119000
obj = -81902.764134, rho = -0.001236
nSV = 2863, nBSV = 2804
Total nSV = 2863
..*
optimization finished, #iter = 2070
nu = 0.119756
obj = -82309.076985, rho = 0.405953
nSV = 2879, nBSV = 2826
Total nSV = 2879
..*
optimization finished, #iter = 2163
nu = 0.119408
obj = -82016.930666, rho = 1.156047
nSV = 2871, nBSV = 2814
Total nSV = 2871
..*
optimization finished, #iter = 2137
nu = 0.119062
obj = -81825.552665, rho = 0.254614
nSV = 2865, nBSV = 2811
Total nSV = 2865
..*
optimization finished, #iter = 2113
nu = 0.119518
obj = -82147.454005, rho = 0.359504
nSV = 2881, nBSV = 2817
Total nSV = 2881
..*
optimization finished, #iter = 2062
nu = 0.119440
obj = -82247.705481, rho = -0.354828
nSV = 2874, nBSV = 2820
Total nSV = 2874
..*
optimization finished, #iter = 2094
nu = 0.118663
obj = -81431.156163, rho = 0.596564
nSV = 2851, nBSV = 2798
Total nSV = 2851
..*
optimization finished, #iter = 2120
nu = 0.119015
obj = -81922.194723, rho = 0.643545
nSV = 2867, nBSV = 2805
Total nSV = 2867
Cross Validation Accuracy = 94.7434%
1 -1 94.7434 (best c=30, g=50, rate=94.7434)
..*
optimization finished, #iter = 2379
nu = 0.115593
obj = -80179.748589, rho = 4.583943
nSV = 2786, nBSV = 2723
Total nSV = 2786
..*
optimization finished, #iter = 2387
nu = 0.116005
obj = -80478.498166, rho = 2.682479
nSV = 2798, nBSV = 2731
Total nSV = 2798
..*
optimization finished, #iter = 2465
nu = 0.115088
obj = -79974.518017, rho = 2.046003
nSV = 2778, nBSV = 2709
Total nSV = 2778
..*
optimization finished, #iter = 2308
nu = 0.115737
obj = -80286.279001, rho = 2.837932
nSV = 2790, nBSV = 2728
Total nSV = 2790
..*
optimization finished, #iter = 2552
nu = 0.115276
obj = -79993.001890, rho = 3.855084
nSV = 2789, nBSV = 2713
Total nSV = 2789
..*
optimization finished, #iter = 2401
nu = 0.115031
obj = -79831.682467, rho = 2.714962
nSV = 2772, nBSV = 2702
Total nSV = 2772
..*
optimization finished, #iter = 2340
nu = 0.115549
obj = -80089.872289, rho = 2.397278
nSV = 2789, nBSV = 2715
Total nSV = 2789
..*
optimization finished, #iter = 2407
nu = 0.115632
obj = -80311.458806, rho = 1.861487
nSV = 2789, nBSV = 2719
Total nSV = 2789
..*
optimization finished, #iter = 2324
nu = 0.114481
obj = -79371.614809, rho = 3.443995
nSV = 2770, nBSV = 2695
Total nSV = 2770
..*
optimization finished, #iter = 2384
nu = 0.115207
obj = -80001.969962, rho = 3.736353
nSV = 2777, nBSV = 2712
Total nSV = 2777
Cross Validation Accuracy = 94.8756%
1 -1 94.8756 (best c=30, g=100, rate=94.8756)
..*
optimization finished, #iter = 2318
nu = 0.116512
obj = -134469.813193, rho = 3.579522
nSV = 2813, nBSV = 2748
Total nSV = 2813
..*
optimization finished, #iter = 2362
nu = 0.116928
obj = -134963.435141, rho = 1.955564
nSV = 2816, nBSV = 2752
Total nSV = 2816
..*
optimization finished, #iter = 2342
nu = 0.116005
obj = -134083.058652, rho = 1.641327
nSV = 2802, nBSV = 2734
Total nSV = 2802
..*
optimization finished, #iter = 2386
nu = 0.116702
obj = -134639.856389, rho = 2.192316
nSV = 2816, nBSV = 2749
Total nSV = 2816
..*
optimization finished, #iter = 2426
nu = 0.116248
obj = -134156.570155, rho = 3.269578
nSV = 2803, nBSV = 2736
Total nSV = 2803
..*
optimization finished, #iter = 2187
nu = 0.116049
obj = -133875.176850, rho = 2.018044
nSV = 2795, nBSV = 2736
Total nSV = 2795
..*
optimization finished, #iter = 2278
nu = 0.116488
obj = -134331.660694, rho = 1.656612
nSV = 2805, nBSV = 2744
Total nSV = 2805
..*
optimization finished, #iter = 2369
nu = 0.116526
obj = -134641.829063, rho = 1.005045
nSV = 2810, nBSV = 2744
Total nSV = 2810
..*
optimization finished, #iter = 2202
nu = 0.115471
obj = -133133.137226, rho = 2.499267
nSV = 2786, nBSV = 2718
Total nSV = 2786
..*
optimization finished, #iter = 2245
nu = 0.116052
obj = -134137.483885, rho = 2.858093
nSV = 2798, nBSV = 2734
Total nSV = 2798
Cross Validation Accuracy = 94.8491%
1 -1 94.8491 (best c=30, g=100, rate=94.8756)
..*
optimization finished, #iter = 2513
nu = 0.113320
obj = -131735.127520, rho = 9.115943
nSV = 2741, nBSV = 2669
Total nSV = 2741
..*
optimization finished, #iter = 2900
nu = 0.113657
obj = -132279.864776, rho = 6.024615
nSV = 2743, nBSV = 2665
Total nSV = 2743
..*
optimization finished, #iter = 2831
nu = 0.112830
obj = -131576.830395, rho = 4.887911
nSV = 2733, nBSV = 2655
Total nSV = 2733
..*
optimization finished, #iter = 2974
nu = 0.113410
obj = -131960.451104, rho = 6.220320
nSV = 2744, nBSV = 2661
Total nSV = 2744
..*
optimization finished, #iter = 2815
nu = 0.113028
obj = -131474.322089, rho = 8.206630
nSV = 2732, nBSV = 2656
Total nSV = 2732
..*
optimization finished, #iter = 2593
nu = 0.112778
obj = -131208.344679, rho = 5.815097
nSV = 2723, nBSV = 2650
Total nSV = 2723
..*
optimization finished, #iter = 2654
nu = 0.113137
obj = -131612.653221, rho = 5.445087
nSV = 2730, nBSV = 2657
Total nSV = 2730
..*
optimization finished, #iter = 2892
nu = 0.113417
obj = -132057.631917, rho = 4.159890
nSV = 2738, nBSV = 2662
Total nSV = 2738
..*
optimization finished, #iter = 2606
nu = 0.112162
obj = -130400.888148, rho = 6.933437
nSV = 2710, nBSV = 2639
Total nSV = 2710
..*
optimization finished, #iter = 2608
nu = 0.113012
obj = -131549.548153, rho = 6.964493
nSV = 2734, nBSV = 2657
Total nSV = 2734
Cross Validation Accuracy = 94.9662%
1 -1 94.9662 (best c=50, g=100, rate=94.9662)
diary off
bestcv = 0;
for c = [100]
  for g = [0.01 0.1100]
    cmd = ['-v 10 -h 0 -c ', num2str(c), ' -g ', num2str(g)];
    cv = svmtrain(Ytrain, Xtrain, cmd);
    if (cv >= bestcv),
      bestcv = cv; bestc =c; bestg = g;
    end
    fprintf('%g %g %g (best c=%g, g=%g, rate=%g)\n', log2c, log2g, cv, bestc, bestg, bestcv);
  end
end
..*
optimization finished, #iter = 2562
nu = 0.165058
obj = -391672.364736, rho = 0.922779
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2594
nu = 0.164988
obj = -391522.996497, rho = 0.922976
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2555
nu = 0.165058
obj = -391601.501369, rho = 0.919555
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2595
nu = 0.164988
obj = -391449.431252, rho = 0.920815
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2560
nu = 0.165065
obj = -391635.355616, rho = 0.920982
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2559
nu = 0.164981
obj = -391399.728727, rho = 0.919862
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2596
nu = 0.165065
obj = -391669.555569, rho = 0.921969
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2570
nu = 0.164981
obj = -391448.823881, rho = 0.920648
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2545
nu = 0.165065
obj = -391624.424720, rho = 0.920845
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2571
nu = 0.164988
obj = -391382.160854, rho = 0.919227
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 91.7488%
1 -1 91.7488 (best c=100, g=0.01, rate=91.7488)
..*
optimization finished, #iter = 2517
nu = 0.165058
obj = -374396.309519, rho = 0.150872
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2506
nu = 0.164988
obj = -374766.513777, rho = 0.153110
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2499
nu = 0.165058
obj = -373616.739178, rho = 0.115583
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2511
nu = 0.164988
obj = -373955.047798, rho = 0.128574
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2491
nu = 0.165065
obj = -373994.495535, rho = 0.131429
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2500
nu = 0.164981
obj = -373402.934742, rho = 0.117860
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2518
nu = 0.165065
obj = -374369.651937, rho = 0.140683
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2518
nu = 0.164981
obj = -373944.373202, rho = 0.127126
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2505
nu = 0.165065
obj = -373873.600030, rho = 0.130204
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2499
nu = 0.164988
obj = -373210.256767, rho = 0.112791
nSV = 3932, nBSV = 3932
Total nSV = 3932
Cross Validation Accuracy = 92.1944%
1 -1 92.1944 (best c=100, g=0.11, rate=92.1944)
diary off
bestcv = 0;
for c = [100]
  for g = [0.1 100]
    cmd = ['-v 10 -h 0 -c ', num2str(c), ' -g ', num2str(g)];
    cv = svmtrain(Ytrain, Xtrain, cmd);
    if (cv >= bestcv),
      bestcv = cv; bestc =c; bestg = g;
    end
    fprintf('%g %g %g (best c=%g, g=%g, rate=%g)\n', log2c, log2g, cv, bestc, bestg, bestcv);
  end
end
..*
optimization finished, #iter = 2523
nu = 0.165058
obj = -376123.630667, rho = 0.228030
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2500
nu = 0.164988
obj = -376441.314292, rho = 0.230257
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2493
nu = 0.165058
obj = -375414.439106, rho = 0.196005
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2505
nu = 0.164988
obj = -375703.929138, rho = 0.207619
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2494
nu = 0.165065
obj = -375758.148098, rho = 0.210235
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2502
nu = 0.164981
obj = -375201.958489, rho = 0.198109
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2512
nu = 0.165065
obj = -376099.020505, rho = 0.218547
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2509
nu = 0.164981
obj = -375694.361997, rho = 0.206212
nSV = 3932, nBSV = 3932
Total nSV = 3932
..*
optimization finished, #iter = 2506
nu = 0.165065
obj = -375647.726917, rho = 0.209264
nSV = 3934, nBSV = 3934
Total nSV = 3934
..*
optimization finished, #iter = 2502
nu = 0.164988
obj = -375026.712495, rho = 0.193424
nSV = 3933, nBSV = 3931
Total nSV = 3933
Cross Validation Accuracy = 92.0811%
1 -1 92.0811 (best c=100, g=0.1, rate=92.0811)
...*
optimization finished, #iter = 3816
nu = 0.110886
obj = -259584.670973, rho = 17.782923
nSV = 2686, nBSV = 2593
Total nSV = 2686
...*
optimization finished, #iter = 3851
nu = 0.111343
obj = -260839.649770, rho = 13.103408
nSV = 2698, nBSV = 2610
Total nSV = 2698
....*
optimization finished, #iter = 4290
nu = 0.110700
obj = -259733.714629, rho = 10.828089
nSV = 2683, nBSV = 2598
Total nSV = 2683
...*
optimization finished, #iter = 3594
nu = 0.111101
obj = -260159.875281, rho = 13.468807
nSV = 2695, nBSV = 2604
Total nSV = 2695
....*
optimization finished, #iter = 4024
nu = 0.110698
obj = -259191.240882, rho = 16.240968
nSV = 2684, nBSV = 2596
Total nSV = 2684
...*
optimization finished, #iter = 3388
nu = 0.110402
obj = -258776.251312, rho = 12.068748
nSV = 2679, nBSV = 2592
Total nSV = 2679
...*
optimization finished, #iter = 3573
nu = 0.110765
obj = -259517.447565, rho = 12.237704
nSV = 2682, nBSV = 2596
Total nSV = 2682
...*
optimization finished, #iter = 3706
nu = 0.111158
obj = -260527.619940, rho = 10.249249
nSV = 2691, nBSV = 2605
Total nSV = 2691
...*
optimization finished, #iter = 3569
nu = 0.109773
obj = -256992.461939, rho = 13.828031
nSV = 2660, nBSV = 2570
Total nSV = 2660
...*
optimization finished, #iter = 3486
nu = 0.110735
obj = -259491.174066, rho = 14.882915
nSV = 2679, nBSV = 2598
Total nSV = 2679
Cross Validation Accuracy = 95.0002%
1 -1 95.0002 (best c=100, g=100, rate=95.0002)
diary off
bestcv = 0;
for c = [1000]
  for g = [0.1 1 10 100]
    cmd = ['-v 10 -h 0 -c ', num2str(c), ' -g ', num2str(g)];
    cv = svmtrain(Ytrain, Xtrain, cmd);
    if (cv >= bestcv),
      bestcv = cv; bestc =c; bestg = g;
    end
    fprintf('%g %g %g (best c=%g, g=%g, rate=%g)\n', log2c, log2g, cv, bestc, bestg, bestcv);
  end
end
..*
optimization finished, #iter = 2252
nu = 0.143463
obj = -3199216.718049, rho = -1.049092
nSV = 3424, nBSV = 3414
Total nSV = 3424
..*
optimization finished, #iter = 2249
nu = 0.143837
obj = -3205831.490020, rho = -1.140504
nSV = 3431, nBSV = 3423
Total nSV = 3431
..*
optimization finished, #iter = 2246
nu = 0.142577
obj = -3178847.374802, rho = -1.166579
nSV = 3404, nBSV = 3389
Total nSV = 3404
..*
optimization finished, #iter = 2256
nu = 0.143183
obj = -3193224.130596, rho = -1.172538
nSV = 3420, nBSV = 3404
Total nSV = 3420
..*
optimization finished, #iter = 2250
nu = 0.143184
obj = -3192441.193024, rho = -1.117971
nSV = 3421, nBSV = 3407
Total nSV = 3421
..*
optimization finished, #iter = 2245
nu = 0.142626
obj = -3180528.330815, rho = -1.133406
nSV = 3409, nBSV = 3393
Total nSV = 3409
..*
optimization finished, #iter = 2259
nu = 0.143398
obj = -3196458.022080, rho = -1.101956
nSV = 3426, nBSV = 3407
Total nSV = 3426
..*
optimization finished, #iter = 2268
nu = 0.143013
obj = -3190630.729715, rho = -1.171824
nSV = 3415, nBSV = 3402
Total nSV = 3415
..*
optimization finished, #iter = 2247
nu = 0.143002
obj = -3183202.572733, rho = -1.125335
nSV = 3419, nBSV = 3399
Total nSV = 3419
..*
optimization finished, #iter = 2256
nu = 0.142566
obj = -3180020.086335, rho = -1.115812
nSV = 3407, nBSV = 3388
Total nSV = 3407
Cross Validation Accuracy = 93.7993%
1 -1 93.7993 (best c=1000, g=0.1, rate=93.7993)
..*
optimization finished, #iter = 2043
nu = 0.122442
obj = -2789946.683298, rho = 0.208404
nSV = 2944, nBSV = 2893
Total nSV = 2944
..*
optimization finished, #iter = 2007
nu = 0.122641
obj = -2797740.209249, rho = -0.648545
nSV = 2951, nBSV = 2902
Total nSV = 2951
.*
optimization finished, #iter = 1985
nu = 0.121634
obj = -2776740.761168, rho = -0.856185
nSV = 2919, nBSV = 2879
Total nSV = 2919
..*
optimization finished, #iter = 2089
nu = 0.122414
obj = -2791529.938718, rho = -0.396851
nSV = 2947, nBSV = 2890
Total nSV = 2947
..*
optimization finished, #iter = 2016
nu = 0.122025
obj = -2782575.045285, rho = 0.075885
nSV = 2933, nBSV = 2880
Total nSV = 2933
..*
optimization finished, #iter = 2081
nu = 0.121647
obj = -2775873.004707, rho = -0.465807
nSV = 2924, nBSV = 2878
Total nSV = 2924
..*
optimization finished, #iter = 2051
nu = 0.122281
obj = -2787011.733925, rho = -0.473807
nSV = 2937, nBSV = 2888
Total nSV = 2937
..*
optimization finished, #iter = 2033
nu = 0.122027
obj = -2787845.327526, rho = -0.865778
nSV = 2930, nBSV = 2887
Total nSV = 2930
.*
optimization finished, #iter = 1989
nu = 0.121488
obj = -2764524.813944, rho = -0.506408
nSV = 2917, nBSV = 2873
Total nSV = 2917
..*
optimization finished, #iter = 2021
nu = 0.121622
obj = -2777171.070225, rho = -0.274692
nSV = 2920, nBSV = 2876
Total nSV = 2920
Cross Validation Accuracy = 94.5999%
1 -1 94.5999 (best c=1000, g=1, rate=94.5999)
....*
optimization finished, #iter = 4029
nu = 0.110940
obj = -2604272.899936, rho = 22.567603
nSV = 2686, nBSV = 2602
Total nSV = 2686
...*
optimization finished, #iter = 3421
nu = 0.111367
obj = -2616232.652746, rho = 16.730780
nSV = 2698, nBSV = 2616
Total nSV = 2698
....*
optimization finished, #iter = 4181
nu = 0.110736
obj = -2604640.084421, rho = 14.118418
nSV = 2690, nBSV = 2596
Total nSV = 2690
...*
optimization finished, #iter = 3913
nu = 0.111144
obj = -2608740.873318, rho = 17.227132
nSV = 2694, nBSV = 2607
Total nSV = 2694
....*
optimization finished, #iter = 4039
nu = 0.110750
obj = -2600216.758972, rho = 21.132459
nSV = 2681, nBSV = 2603
Total nSV = 2681
...*
optimization finished, #iter = 3758
nu = 0.110432
obj = -2594608.364077, rho = 14.600042
nSV = 2679, nBSV = 2595
Total nSV = 2679
....*
optimization finished, #iter = 4206
nu = 0.110817
obj = -2602642.216868, rho = 15.273792
nSV = 2683, nBSV = 2600
Total nSV = 2683
....*
optimization finished, #iter = 4095
nu = 0.111180
obj = -2611726.650317, rho = 12.538252
nSV = 2692, nBSV = 2607
Total nSV = 2692
....*
optimization finished, #iter = 4036
nu = 0.109811
obj = -2577790.295035, rho = 16.931783
nSV = 2663, nBSV = 2580
Total nSV = 2663
...*
optimization finished, #iter = 3490
nu = 0.110761
obj = -2602507.096470, rho = 18.411781
nSV = 2680, nBSV = 2599
Total nSV = 2680
Cross Validation Accuracy = 95.0002%
1 -1 95.0002 (best c=1000, g=10, rate=95.0002)
.......................*
optimization finished, #iter = 23921
nu = 0.107143
obj = -2504169.735613, rho = 62.598485
nSV = 2619, nBSV = 2493
Total nSV = 2619
..................*
optimization finished, #iter = 18994
nu = 0.107812
obj = -2516071.874866, rho = 42.943963
nSV = 2632, nBSV = 2510
Total nSV = 2632
...........................*
optimization finished, #iter = 27703
nu = 0.107590
obj = -2513156.562851, rho = 35.908719
nSV = 2628, nBSV = 2494
Total nSV = 2628
..........................*
optimization finished, #iter = 26640
nu = 0.107463
obj = -2513042.302612, rho = 44.969679
nSV = 2627, nBSV = 2498
Total nSV = 2627
........................*
optimization finished, #iter = 24954
nu = 0.107033
obj = -2500209.027347, rho = 57.563152
nSV = 2620, nBSV = 2486
Total nSV = 2620
.......................*
optimization finished, #iter = 23991
nu = 0.107004
obj = -2502779.751658, rho = 41.960523
nSV = 2611, nBSV = 2482
Total nSV = 2611
...........................*
optimization finished, #iter = 27554
nu = 0.107277
obj = -2506413.814460, rho = 40.118799
nSV = 2617, nBSV = 2486
Total nSV = 2617
......................*
optimization finished, #iter = 22613
nu = 0.107759
obj = -2521722.707738, rho = 31.730098
nSV = 2629, nBSV = 2507
Total nSV = 2629
.......................*
optimization finished, #iter = 23348
nu = 0.106169
obj = -2479265.365025, rho = 46.515091
nSV = 2595, nBSV = 2469
Total nSV = 2595
...........................*
optimization finished, #iter = 27542
nu = 0.107298
obj = -2508053.143152, rho = 53.282161
nSV = 2628, nBSV = 2494
Total nSV = 2628
Cross Validation Accuracy = 95.2117%
1 -1 95.2117 (best c=1000, g=100, rate=95.2117)
diary off


bestcv = 0;
for c = [0.1 1 10]
  for g = [0.1 1 10 ]
    cmd = ['-v 10 -h 0 -c ', num2str(c), ' -g ', num2str(g)];
    cv = svmtrain(Ytrain, Xtrain, cmd);
    if (cv >= bestcv),
      bestcv = cv; bestc =c; bestg = g;
    end
    fprintf('%g %g %g (best c=%g, g=%g, rate=%g)\n', c, g, cv, bestc, bestg, bestcv);
  end
end
*
optimization finished, #iter = 582
nu = 0.036320
obj = -74.819774, rho = -0.410896
nSV = 878, nBSV = 856
Total nSV = 878
*
optimization finished, #iter = 598
nu = 0.036582
obj = -75.601411, rho = -0.449293
nSV = 886, nBSV = 854
Total nSV = 886
*
optimization finished, #iter = 596
nu = 0.036344
obj = -74.537855, rho = -0.403330
nSV = 881, nBSV = 849
Total nSV = 881
*
optimization finished, #iter = 604
nu = 0.036194
obj = -74.384825, rho = -0.420212
nSV = 882, nBSV = 847
Total nSV = 882
*
optimization finished, #iter = 595
nu = 0.036132
obj = -74.050468, rho = -0.465028
nSV = 881, nBSV = 841
Total nSV = 881
*
optimization finished, #iter = 589
nu = 0.035895
obj = -73.672273, rho = -0.429614
nSV = 876, nBSV = 837
Total nSV = 876
*
optimization finished, #iter = 600
nu = 0.036351
obj = -75.000017, rho = -0.416763
nSV = 885, nBSV = 850
Total nSV = 885
*
optimization finished, #iter = 582
nu = 0.035895
obj = -73.299635, rho = -0.425458
nSV = 872, nBSV = 836
Total nSV = 872
*
optimization finished, #iter = 588
nu = 0.036233
obj = -74.853918, rho = -0.401281
nSV = 879, nBSV = 848
Total nSV = 879
*
optimization finished, #iter = 578
nu = 0.035947
obj = -74.034093, rho = -0.428080
nSV = 875, nBSV = 842
Total nSV = 875
Cross Validation Accuracy = 98.9464%
0.1 0.1 98.9464 (best c=0.1, g=0.1, rate=98.9464)
.*
optimization finished, #iter = 1339
nu = 0.044810
obj = -100.512844, rho = 0.799400
nSV = 1431, nBSV = 802
Total nSV = 1431
.*
optimization finished, #iter = 1335
nu = 0.044812
obj = -100.439027, rho = 0.797617
nSV = 1414, nBSV = 800
Total nSV = 1414
.*
optimization finished, #iter = 1294
nu = 0.044812
obj = -100.349867, rho = 0.791954
nSV = 1405, nBSV = 812
Total nSV = 1405
.*
optimization finished, #iter = 1292
nu = 0.044730
obj = -100.146799, rho = 0.791888
nSV = 1401, nBSV = 817
Total nSV = 1401
.*
optimization finished, #iter = 1245
nu = 0.044812
obj = -100.215411, rho = 0.782689
nSV = 1382, nBSV = 828
Total nSV = 1382
.*
optimization finished, #iter = 1289
nu = 0.044810
obj = -100.296253, rho = 0.785409
nSV = 1399, nBSV = 818
Total nSV = 1399
.*
optimization finished, #iter = 1329
nu = 0.044730
obj = -100.359340, rho = 0.798352
nSV = 1421, nBSV = 796
Total nSV = 1421
.*
optimization finished, #iter = 1246
nu = 0.044812
obj = -100.174802, rho = 0.782666
nSV = 1388, nBSV = 828
Total nSV = 1388
.*
optimization finished, #iter = 1301
nu = 0.044812
obj = -100.407628, rho = 0.796664
nSV = 1408, nBSV = 820
Total nSV = 1408
.*
optimization finished, #iter = 1352
nu = 0.044730
obj = -100.275834, rho = 0.794801
nSV = 1427, nBSV = 796
Total nSV = 1427
Cross Validation Accuracy = 97.7607%
0.1 1 97.7607 (best c=0.1, g=0.1, rate=98.9464)
......*
optimization finished, #iter = 6392
nu = 0.044810
obj = -103.708310, rho = 0.983486
nSV = 4870, nBSV = 534
Total nSV = 4870
......*
optimization finished, #iter = 6431
nu = 0.044812
obj = -103.717453, rho = 0.983657
nSV = 4953, nBSV = 534
Total nSV = 4953
......*
optimization finished, #iter = 6413
nu = 0.044812
obj = -103.714441, rho = 0.983558
nSV = 4929, nBSV = 534
Total nSV = 4929
......*
optimization finished, #iter = 6417
nu = 0.044730
obj = -103.518227, rho = 0.983482
nSV = 4930, nBSV = 533
Total nSV = 4930
......*
optimization finished, #iter = 6435
nu = 0.044812
obj = -103.710424, rho = 0.983329
nSV = 4876, nBSV = 534
Total nSV = 4876
......*
optimization finished, #iter = 6422
nu = 0.044810
obj = -103.712573, rho = 0.983452
nSV = 4898, nBSV = 534
Total nSV = 4898
......*
optimization finished, #iter = 6416
nu = 0.044730
obj = -103.522606, rho = 0.983631
nSV = 4930, nBSV = 533
Total nSV = 4930
......*
optimization finished, #iter = 6396
nu = 0.044812
obj = -103.706610, rho = 0.983377
nSV = 4885, nBSV = 534
Total nSV = 4885
......*
optimization finished, #iter = 6412
nu = 0.044812
obj = -103.709050, rho = 0.983418
nSV = 4866, nBSV = 534
Total nSV = 4866
......*
optimization finished, #iter = 6416
nu = 0.044730
obj = -103.521652, rho = 0.983621
nSV = 4933, nBSV = 533
Total nSV = 4933
Cross Validation Accuracy = 97.7607%
0.1 10 97.7607 (best c=0.1, g=0.1, rate=98.9464)
*
optimization finished, #iter = 894
nu = 0.025446
obj = -525.597288, rho = -0.609205
nSV = 675, nBSV = 547
Total nSV = 675
*
optimization finished, #iter = 844
nu = 0.025666
obj = -527.755572, rho = -0.723490
nSV = 672, nBSV = 547
Total nSV = 672
*
optimization finished, #iter = 876
nu = 0.025066
obj = -511.797946, rho = -0.612686
nSV = 662, nBSV = 533
Total nSV = 662
*
optimization finished, #iter = 815
nu = 0.025072
obj = -515.197958, rho = -0.655824
nSV = 667, nBSV = 540
Total nSV = 667
*
optimization finished, #iter = 809
nu = 0.024924
obj = -510.851548, rho = -0.762646
nSV = 659, nBSV = 536
Total nSV = 659
*
optimization finished, #iter = 821
nu = 0.024857
obj = -510.357385, rho = -0.591911
nSV = 654, nBSV = 531
Total nSV = 654
*
optimization finished, #iter = 835
nu = 0.025529
obj = -527.978808, rho = -0.719983
nSV = 668, nBSV = 540
Total nSV = 668
*
optimization finished, #iter = 787
nu = 0.024482
obj = -500.631237, rho = -0.557503
nSV = 648, nBSV = 525
Total nSV = 648
*
optimization finished, #iter = 919
nu = 0.025294
obj = -519.440543, rho = -0.619956
nSV = 670, nBSV = 533
Total nSV = 670
*
optimization finished, #iter = 799
nu = 0.025080
obj = -516.519308, rho = -0.632008
nSV = 665, nBSV = 539
Total nSV = 665
Cross Validation Accuracy = 99.1201%
1 0.1 99.1201 (best c=1, g=0.1, rate=99.1201)
..*
optimization finished, #iter = 2690
nu = 0.035392
obj = -506.495868, rho = -0.201254
nSV = 1531, nBSV = 236
Total nSV = 1531
..*
optimization finished, #iter = 2680
nu = 0.035310
obj = -504.749462, rho = -0.201612
nSV = 1530, nBSV = 239
Total nSV = 1530
..*
optimization finished, #iter = 2690
nu = 0.034978
obj = -499.363307, rho = -0.209243
nSV = 1506, nBSV = 233
Total nSV = 1506
..*
optimization finished, #iter = 2633
nu = 0.034966
obj = -497.502940, rho = -0.209744
nSV = 1491, nBSV = 235
Total nSV = 1491
..*
optimization finished, #iter = 2616
nu = 0.034633
obj = -493.400992, rho = -0.216076
nSV = 1480, nBSV = 236
Total nSV = 1480
..*
optimization finished, #iter = 2626
nu = 0.034838
obj = -496.628933, rho = -0.216406
nSV = 1508, nBSV = 242
Total nSV = 1508
..*
optimization finished, #iter = 2729
nu = 0.035467
obj = -509.952876, rho = -0.206073
nSV = 1530, nBSV = 243
Total nSV = 1530
..*
optimization finished, #iter = 2625
nu = 0.034553
obj = -489.992751, rho = -0.216422
nSV = 1480, nBSV = 230
Total nSV = 1480
..*
optimization finished, #iter = 2615
nu = 0.035234
obj = -502.930163, rho = -0.200095
nSV = 1496, nBSV = 240
Total nSV = 1496
..*
optimization finished, #iter = 2704
nu = 0.035165
obj = -503.432542, rho = -0.210415
nSV = 1519, nBSV = 235
Total nSV = 1519
Cross Validation Accuracy = 99.1881%
1 1 99.1881 (best c=1, g=1, rate=99.1881)
........*
optimization finished, #iter = 8831
nu = 0.044810
obj = -758.838785, rho = 0.834892
nSV = 4910, nBSV = 534
Total nSV = 4910
........*
optimization finished, #iter = 8712
nu = 0.044812
obj = -759.751116, rho = 0.836408
nSV = 5009, nBSV = 534
Total nSV = 5009
........*
optimization finished, #iter = 8779
nu = 0.044812
obj = -759.451159, rho = 0.835507
nSV = 4994, nBSV = 534
Total nSV = 4994
........*
optimization finished, #iter = 8786
nu = 0.044730
obj = -757.829261, rho = 0.834799
nSV = 4975, nBSV = 533
Total nSV = 4975
........*
optimization finished, #iter = 8864
nu = 0.044812
obj = -759.050940, rho = 0.833456
nSV = 4947, nBSV = 534
Total nSV = 4947
........*
optimization finished, #iter = 8826
nu = 0.044810
obj = -759.264841, rho = 0.834577
nSV = 4955, nBSV = 534
Total nSV = 4955
........*
optimization finished, #iter = 8644
nu = 0.044730
obj = -758.266817, rho = 0.836146
nSV = 4973, nBSV = 533
Total nSV = 4973
........*
optimization finished, #iter = 8859
nu = 0.044812
obj = -758.669476, rho = 0.833905
nSV = 4940, nBSV = 534
Total nSV = 4940
........*
optimization finished, #iter = 8883
nu = 0.044812
obj = -758.912710, rho = 0.834280
nSV = 4915, nBSV = 534
Total nSV = 4915
........*
optimization finished, #iter = 8726
nu = 0.044730
obj = -758.171194, rho = 0.836069
nSV = 5000, nBSV = 533
Total nSV = 5000
Cross Validation Accuracy = 97.7607%
1 10 97.7607 (best c=1, g=1, rate=99.1881)
...*
optimization finished, #iter = 3990
nu = 0.017636
obj = -3348.845216, rho = -1.188329
nSV = 651, nBSV = 257
Total nSV = 651
....*
optimization finished, #iter = 4054
nu = 0.017706
obj = -3325.714444, rho = -1.073849
nSV = 650, nBSV = 256
Total nSV = 650
....*
optimization finished, #iter = 4055
nu = 0.016989
obj = -3216.694053, rho = -1.133148
nSV = 647, nBSV = 254
Total nSV = 647
...*
optimization finished, #iter = 3777
nu = 0.017260
obj = -3242.938138, rho = -1.375169
nSV = 651, nBSV = 257
Total nSV = 651
...*
optimization finished, #iter = 3915
nu = 0.017059
obj = -3210.333705, rho = -1.570644
nSV = 641, nBSV = 253
Total nSV = 641
....*
optimization finished, #iter = 4037
nu = 0.017053
obj = -3208.233369, rho = -1.028798
nSV = 645, nBSV = 243
Total nSV = 645
...*
optimization finished, #iter = 3914
nu = 0.017870
obj = -3369.569362, rho = -1.185056
nSV = 652, nBSV = 257
Total nSV = 652
...*
optimization finished, #iter = 3828
nu = 0.016626
obj = -3111.337640, rho = -1.094425
nSV = 617, nBSV = 243
Total nSV = 617
....*
optimization finished, #iter = 4056
nu = 0.017433
obj = -3292.804925, rho = -1.102362
nSV = 656, nBSV = 258
Total nSV = 656
....*
optimization finished, #iter = 4166
nu = 0.017399
obj = -3290.381733, rho = -0.958306
nSV = 656, nBSV = 255
Total nSV = 656
Cross Validation Accuracy = 99.1994%
10 0.1 99.1994 (best c=10, g=0.1, rate=99.1994)
....*
optimization finished, #iter = 4757
nu = 0.007541
obj = -1005.154695, rho = -0.127763
nSV = 1799, nBSV = 26
Total nSV = 1799
....*
optimization finished, #iter = 4890
nu = 0.007590
obj = -1027.982435, rho = -0.126475
nSV = 1813, nBSV = 30
Total nSV = 1813
....*
optimization finished, #iter = 4895
nu = 0.007464
obj = -1003.940203, rho = -0.134325
nSV = 1830, nBSV = 29
Total nSV = 1830
....*
optimization finished, #iter = 4511
nu = 0.007196
obj = -956.147082, rho = -0.133375
nSV = 1798, nBSV = 24
Total nSV = 1798
....*
optimization finished, #iter = 4750
nu = 0.007206
obj = -976.904739, rho = -0.141804
nSV = 1797, nBSV = 29
Total nSV = 1797
....*
optimization finished, #iter = 4588
nu = 0.007251
obj = -980.097810, rho = -0.136825
nSV = 1769, nBSV = 25
Total nSV = 1769
.....*
optimization finished, #iter = 5021
nu = 0.007743
obj = -1049.247567, rho = -0.128176
nSV = 1845, nBSV = 30
Total nSV = 1845
....*
optimization finished, #iter = 4596
nu = 0.007098
obj = -943.903308, rho = -0.139580
nSV = 1761, nBSV = 25
Total nSV = 1761
....*
optimization finished, #iter = 4635
nu = 0.007465
obj = -995.666082, rho = -0.130608
nSV = 1782, nBSV = 27
Total nSV = 1782
....*
optimization finished, #iter = 4824
nu = 0.007544
obj = -1017.124383, rho = -0.130093
nSV = 1822, nBSV = 28
Total nSV = 1822
Cross Validation Accuracy = 99.1692%
10 1 99.1692 (best c=10, g=0.1, rate=99.1994)
.........*
optimization finished, #iter = 9337
nu = 0.007761
obj = -924.887740, rho = 0.718413
nSV = 4991, nBSV = 0
Total nSV = 4991
.........*
optimization finished, #iter = 9778
nu = 0.007812
obj = -930.861146, rho = 0.722362
nSV = 5145, nBSV = 0
Total nSV = 5145
.........*
optimization finished, #iter = 9736
nu = 0.007805
obj = -930.119216, rho = 0.720859
nSV = 5137, nBSV = 0
Total nSV = 5137
.........*
optimization finished, #iter = 9711
nu = 0.007786
obj = -927.802703, rho = 0.720074
nSV = 5125, nBSV = 0
Total nSV = 5125
.........*
optimization finished, #iter = 9562
nu = 0.007796
obj = -928.982681, rho = 0.718116
nSV = 5095, nBSV = 0
Total nSV = 5095
.........*
optimization finished, #iter = 9661
nu = 0.007801
obj = -929.618308, rho = 0.719716
nSV = 5101, nBSV = 0
Total nSV = 5101
.........*
optimization finished, #iter = 9697
nu = 0.007795
obj = -928.895620, rho = 0.721999
nSV = 5132, nBSV = 0
Total nSV = 5132
.........*
optimization finished, #iter = 9436
nu = 0.007778
obj = -926.851585, rho = 0.717795
nSV = 5048, nBSV = 0
Total nSV = 5048
.........*
optimization finished, #iter = 9608
nu = 0.007780
obj = -927.144924, rho = 0.719590
nSV = 5085, nBSV = 0
Total nSV = 5085
.........*
optimization finished, #iter = 9808
nu = 0.007793
obj = -928.607888, rho = 0.721868
nSV = 5142, nBSV = 0
Total nSV = 5142
Cross Validation Accuracy = 97.7607%
model = svmtrain(Ytrain, Xtrain, '-c 0.1 -g 10 -v 10');%-c 10000 -g 10 -v 10
....*..*
optimization finished, #iter = 6392
nu = 0.044810
obj = -103.708310, rho = 0.983486
nSV = 4870, nBSV = 534
Total nSV = 4870
....*..*
optimization finished, #iter = 6431
nu = 0.044812
obj = -103.717453, rho = 0.983657
nSV = 4953, nBSV = 534
Total nSV = 4953
....*..*
optimization finished, #iter = 6413
nu = 0.044812
obj = -103.714441, rho = 0.983558
nSV = 4929, nBSV = 534
Total nSV = 4929
....*..*
optimization finished, #iter = 6417
nu = 0.044730
obj = -103.518227, rho = 0.983482
nSV = 4930, nBSV = 533
Total nSV = 4930
....*..*
optimization finished, #iter = 6435
nu = 0.044812
obj = -103.710424, rho = 0.983329
nSV = 4876, nBSV = 534
Total nSV = 4876
....*..*
optimization finished, #iter = 6422
nu = 0.044810
obj = -103.712573, rho = 0.983452
nSV = 4898, nBSV = 534
Total nSV = 4898
....*..*
optimization finished, #iter = 6416
nu = 0.044730
obj = -103.522606, rho = 0.983631
nSV = 4930, nBSV = 533
Total nSV = 4930
....*..*
optimization finished, #iter = 6396
nu = 0.044812
obj = -103.706610, rho = 0.983377
nSV = 4885, nBSV = 534
Total nSV = 4885
....*..*
optimization finished, #iter = 6412
nu = 0.044812
obj = -103.709050, rho = 0.983418
nSV = 4866, nBSV = 534
Total nSV = 4866
....*..*
optimization finished, #iter = 6416
nu = 0.044730
obj = -103.521652, rho = 0.983621
nSV = 4933, nBSV = 533
Total nSV = 4933
Cross Validation Accuracy = 97.7607%
<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/matlab/general/onCleanup.m',43,1)">43  </a>        function obj = onCleanup(functionHandle)
if system_dependent('IsDebugMode')==1, dbquit; end
clc
model = svmtrain(Ytrain, Xtrain, '-c 10 -g 0.1');%-c 10000 -g 10 -v 10
..*..*
optimization finished, #iter = 4278
nu = 0.017300
obj = -3632.243325, rho = -1.204826
nSV = 702, nBSV = 281
Total nSV = 702
Xtest = create_test_input(dim,residual_cut, patchWidth,patchHeight);
Xtest = Xtest';
Ytest =rand(size(Ytrain));
[predict_label_L, accuracy_L, dec_values_L] = svmpredict(Ytest, Xtest, model);
Accuracy = 0% (0/26481) (classification)
% numPatches = (dim(1)/patchWidth) *(dim(2)/patchHeight);
detectedInlier = zeros(size(mask_cut));
patchNumber = 0;
for i = 1:dim(1)-patchWidth+1  
    for j = 1:dim(2)-patchHeight+1 
        startWidth = j;
        endWidth = startWidth + patchWidth-1;
        startHeight = i;
        endHeight = startHeight + patchHeight-1;
        patchNumber = patchNumber + 1;
        detectedInlier(startHeight+center,startWidth+center) = predict_label_L(patchNumber);
%         detectedInlier(startHeight:endHeight,startWidth:endWidth) = predict_label_L(patchNumber);
    end
end
figure('Name','Detected Inlier-Validation','NumberTitle','off');
imshow(detectedInlier,[]);
resultStitched_svm = detectedInlier.*pilot(:,101:200) + (1-detectedInlier).*pilotOnEigSpace(:,101:200);
figure('Name','Validation resultStitched_svm','NumberTitle','off');
imshow(resultStitched_svm,[]);
name = sprintf('./result/mat/testIm_template_%d.mat',testImNo);
% save(name,'testIm');
testIm = load(name);
testIm = testIm.testIm;
testIm = mat2gray(testIm);
figure('Name','Test_Image','NumberTitle','off');imshow(testIm);
I_0 = 2000;
[y_test, y_test_noNoise] = generateMeasurements(testIm,I_0, angleArr, gaussianNoisePercent);
fistaMaxIter = 100;
lambda0 = 1;
dim=size(testIm);
[pilot_test] = reconstructPilot(y_test,angleArr,dim,I_0,testIm,methodName,fistaMaxIter,lambda0);
 using Rescaled_Non_Linear_Least_Squares_CS for pilot reconstructioniter = 1
Lbar = 1000.000000
iter =   1, cost = 78912828.689522, cost decreases? YES.
iter = 2
Lbar = 1000.000000
Tolerance reachedfigure('Name','Pilot_testIm','NumberTitle','off');imshow(pilot_test,[]);
fistaMaxIter = 100;
lambda0 = 1;
dim=size(testIm);
[pilot_test] = reconstructPilot(y_test,angleArr,dim,I_0,testIm,methodName,fistaMaxIter,lambda0);
 using Rescaled_Non_Linear_Least_Squares_CS for pilot reconstructioniter = 1
Lbar = 1000.000000
iter =   1, cost = 78912828.689522, cost decreases? YES.
iter = 2
Lbar = 1000.000000
Tolerance reachedtestIm = testIm./ratio;
I_0 = 2000;
[y_test, y_test_noNoise] = generateMeasurements(testIm,I_0, angleArr, gaussianNoisePercent);
ImAddr = sprintf('/home/yadnyesh/Desktop/seminar/fewviews/okra/data_okra/okra6_okra%d_reg_450views_fdk.mat',testImNo); % test image
test_data = load(ImAddr);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('load')" style="font-weight:bold">load</a>
Unable to read file
'/home/yadnyesh/Desktop/seminar/fewviews/okra/data_okra/okra6_okra3_reg_450views_fdk.mat'. No
such file or directory.} 
ImAddr = sprintf('/home/yadnyesh/Desktop/seminar/fewviews/2D/okra/data_okra/okra6_okra%d_reg_450views_fdk.mat',testImNo); % test image
test_data = load(ImAddr);
test_data = test_data.FDK;
testIm= double(test_data(20:end-19,20:end-19,30));
testIm = mat2gray(testIm);
figure('Name','Test_Image','NumberTitle','off');imshow(testIm);
testIm = testIm./ratio;
I_0 = 2000;
[y_test, y_test_noNoise] = generateMeasurements(testIm,I_0, angleArr, gaussianNoisePercent);
%% pilot reconstruction of test image
fistaMaxIter = 100;
lambda0 = 1;
dim=size(testIm);
[pilot_test] = reconstructPilot(y_test,angleArr,dim,I_0,testIm,methodName,fistaMaxIter,lambda0);
 using Rescaled_Non_Linear_Least_Squares_CS for pilot reconstructioniter = 1
Lbar = 1000.000000
Lbar = 1010.000000
Lbar = 1020.100000
Lbar = 1030.301000
Lbar = 1040.604010
Lbar = 1051.010050
Lbar = 1061.520151
Lbar = 1072.135352
Lbar = 1082.856706
Lbar = 1093.685273
Lbar = 1104.622125
iter =   1, cost = 40981344.853594, cost decreases? YES.
iter = 2
Lbar = 1104.622125
Lbar = 1115.668347
Lbar = 1126.825030
Lbar = 1138.093280
Lbar = 1149.474213
Lbar = 1160.968955
Lbar = 1172.578645
Lbar = 1184.304431
Lbar = 1196.147476
Lbar = 1208.108950
Lbar = 1220.190040
Lbar = 1232.391940
Lbar = 1244.715860
Lbar = 1257.163018
iter =   2, cost = 7319719.273901, cost decreases? YES.
iter = 3
Lbar = 1257.163018
Lbar = 1269.734649
Lbar = 1282.431995
Lbar = 1295.256315
Lbar = 1308.208878
Lbar = 1321.290967
iter = 3
Lbar = 1334.503877
iter = 3
Lbar = 1347.848915
iter = 3
Lbar = 1361.327404
iter = 3
Lbar = 1374.940679
iter = 3
Lbar = 1388.690085
iter = 3
Lbar = 1402.576986
iter = 3
Lbar = 1416.602756
iter = 3
Lbar = 1430.768784
iter = 3
Lbar = 1445.076471
iter = 3
Lbar = 1459.527236
iter = 3
Lbar = 1474.122509
iter = 3
Lbar = 1488.863734
iter = 3
Lbar = 1503.752371
iter = 3
Lbar = 1518.789895
iter = 3
Lbar = 1533.977794
iter = 3
Lbar = 1549.317572
iter = 3
Lbar = 1564.810747
iter = 3
Lbar = 1580.458855
iter = 3
Lbar = 1596.263443
iter = 3
Lbar = 1612.226078
iter = 3
Lbar = 1628.348338
iter = 3
Lbar = 1644.631822
iter = 3
Lbar = 1661.078140
iter = 3
Lbar = 1677.688921
iter = 3
Lbar = 1694.465811
iter = 3
Lbar = 1711.410469
iter = 3
Lbar = 1728.524573
iter = 3
Lbar = 1745.809819
iter =   3, cost = 7033315.000575, cost decreases? YES.
iter = 4
Lbar = 1745.809819
iter =   4, cost = 3373507.136678, cost decreases? YES.
iter = 5
Lbar = 1745.809819
iter = 5
Lbar = 1763.267917
iter = 5
Lbar = 1780.900597
iter = 5
Lbar = 1798.709603
iter = 5
Lbar = 1816.696699
iter = 5
Lbar = 1834.863666
iter = 5
Lbar = 1853.212302
iter = 5
Lbar = 1871.744425
iter = 5
Lbar = 1890.461869
iter = 5
Lbar = 1909.366488
iter = 5
Lbar = 1928.460153
iter = 5
Lbar = 1947.744755
iter = 5
Lbar = 1967.222202
iter = 5
Lbar = 1986.894424
iter = 5
Lbar = 2006.763368
iter = 5
Lbar = 2026.831002
iter =   5, cost = 3236925.142765, cost decreases? YES.
iter = 6
Lbar = 2026.831002
iter =   6, cost = 1802950.796935, cost decreases? YES.
iter = 7
Lbar = 2026.831002
iter = 7
Lbar = 2047.099312
iter = 7
Lbar = 2067.570305
iter = 7
Lbar = 2088.246008
iter = 7
Lbar = 2109.128468
iter = 7
Lbar = 2130.219753
iter = 7
Lbar = 2151.521951
iter = 7
Lbar = 2173.037170
iter =   7, cost = 1719321.848836, cost decreases? YES.
iter = 8
Lbar = 2173.037170
iter =   8, cost = 1047567.325720, cost decreases? YES.
iter = 9
Lbar = 2173.037170
iter = 9
Lbar = 2194.767542
iter = 9
Lbar = 2216.715217
iter = 9
Lbar = 2238.882369
iter = 9
Lbar = 2261.271193
iter =   9, cost = 1030074.575393, cost decreases? YES.
iter = 10
Lbar = 2261.271193
iter =  10, cost = 689638.904260, cost decreases? YES.
iter = 11
Lbar = 2261.271193
iter = 11
Lbar = 2283.883905
iter = 11
Lbar = 2306.722744
iter = 11
Lbar = 2329.789971
iter = 11
Lbar = 2353.087871
iter =  11, cost = 659474.291948, cost decreases? YES.
iter = 12
Lbar = 2353.087871
iter =  12, cost = 490547.362442, cost decreases? YES.
iter = 13
Lbar = 2353.087871
iter = 13
Lbar = 2376.618750
iter = 13
Lbar = 2400.384937
iter =  13, cost = 487978.018573, cost decreases? YES.
iter = 14
Lbar = 2400.384937
iter =  14, cost = 408561.752598, cost decreases? YES.
iter = 15
Lbar = 2400.384937
iter = 15
Lbar = 2424.388787
iter = 15
Lbar = 2448.632675
iter =  15, cost = 397787.489241, cost decreases? YES.
iter = 16
Lbar = 2448.632675
iter =  16, cost = 351441.431993, cost decreases? YES.
iter = 17
Lbar = 2448.632675
iter = 17
Lbar = 2473.119001
iter =  17, cost = 344831.945600, cost decreases? YES.
iter = 18
Lbar = 2473.119001
iter =  18, cost = 314550.295432, cost decreases? YES.
iter = 19
Lbar = 2473.119001
iter = 19
Lbar = 2497.850191
iter =  19, cost = 308016.821297, cost decreases? YES.
iter = 20
Lbar = 2497.850191
iter =  20, cost = 284500.194135, cost decreases? YES.
iter = 21
Lbar = 2497.850191
iter = 21
Lbar = 2522.828693
iter =  21, cost = 277445.224061, cost decreases? YES.
iter = 22
Lbar = 2522.828693
iter =  22, cost = 258559.899904, cost decreases? YES.
iter = 23
Lbar = 2522.828693
iter = 23
Lbar = 2548.056980
iter =  23, cost = 250996.688080, cost decreases? YES.
iter = 24
Lbar = 2548.056980
Tolerance reachedname = sprintf('%s/pilot_test_%d_angles_%d_I_0.mat',outDirectory,numAngles,I_0);
save(name,'pilot_test');
pilot_test = load(name);
pilot_test = pilot_test.pilot_test;
figure('Name','Pilot_testIm','NumberTitle','off');imshow(pilot_test,[]);
[eigenVecsSpatial,meanTemplateSpatial,alpha] = genHighQualityPrior(pilot_test,ratio,templateNos);
{Not enough input arguments.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('genHighQualityPrior', '/home/yadnyesh/Desktop/seminar/learning/genHighQualityPrior.m', 77)" style="font-weight:bold">genHighQualityPrior</a> (<a href="matlab: opentoline('/home/yadnyesh/Desktop/seminar/learning/genHighQualityPrior.m',77,0)">line 77</a>)
name = sprintf('%s/highQualityEigenSpace.mat',outDirectory);} 
[eigenVecsSpatial,meanTemplateSpatial,alpha] = genHighQualityPrior(pilot_test,ratio,templateNos,outDirectory);
pilot_testOnEigSpace = meanTemplateSpatial + (eigenVecsSpatial*alpha);
pilot_testOnEigSpace = reshape(pilot_testOnEigSpace,dim);
pilot_testOnEigSpace_norm = mat2gray(pilot_testOnEigSpace);
figure('Name','Pilot_Test_ProjOnEigSpace','NumberTitle','off');
imshow(pilot_testOnEigSpace_norm);
residual_test = abs(pilot_test - pilot_testOnEigSpace);
figure('Name','residual_TestImage','NumberTitle','off');imshow(residual_test,[]);
residual_test_weiner = wiener2(residual_test,[12 12]);
residual_cut_test = mat2gray(residual_test_weiner);
residual_cut_test = residual_cut_test(:,101:200);
% figure;imshow(residual_test_weiner,[]);
% residual_test_norm = mat2gray(residual_test_weiner);
% residual_test_norm = residual_test_norm(:,101:200);
figure('Name','residual_test_weiner','NumberTitle','off');imshow(residual_cut_test,[]);
dim = size(residual_cut_test);
Xtest = create_test_input(dim,residual_cut_test, patchWidth,patchHeight);
Xtest = Xtest';
name = sprintf('%s/Xtest_%d.mat',outDirectory,testImNo);
save(name,'Xtest');
Ytest = rand(size(Xtest,1) , 1);
[predict_label_L, accuracy_L, dec_values_L] = svmpredict(Ytest, Xtest, model);
Accuracy = 0% (0/26481) (classification)
detectedInlier = zeros(size(residual_cut_test));
patchNumber = 0;
for i = 1:dim(1)-patchWidth+1  
    for j = 1:dim(2)-patchHeight+1 
        startWidth = j;
        endWidth = startWidth + patchWidth-1;
        startHeight = i;
        endHeight = startHeight + patchHeight-1;
        patchNumber = patchNumber + 1;
%         detectedInlier(startHeight:endHeight,startWidth:endWidth) = Ytest(patchNumber);
        detectedInlier(startHeight+center,startWidth+center) = predict_label_L(patchNumber);
    end
end
figure('Name','Detected Inlier-Test','NumberTitle','off');
imshow(detectedInlier,[]);
SE = strel('sphere',4);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',5);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',6);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',2);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',1);
InlierClosed = imdilate(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',3);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',5);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
SE = strel('sphere',1);
InlierCloseddilate = imdilate(InlierClosed,SE);
figure('Name','InlierCloseddilate','NumberTitle','off');imshow(InlierCloseddilate,[]);
SE = strel('sphere',5);
InlierClosed = imclose(detectedInlier,SE);
figure('Name','InlierClosed','NumberTitle','off');imshow(InlierClosed,[]);
residual_clust_test = bwareaopen(InlierClosed, 5); % remove clusters of size <5
figure('Name','residual_clust_test','NumberTitle','off');imshow(residual_clust_test);
name = sprintf('%s/mask_predicted_test_%d_template.mat',outDirectory,testImNo);
save(name,'residual_clust_test');
residual_clust_test= load(name); 
residual_clust_test = residual_clust_test.residual_clust_test;
resultStitched_svm = weights.*pilot_test + (1-weights).*pilot_testOnEigSpace;
{Undefined function or variable 'weights'.} 
weights = zeros(300,300);
weights(:,101:200)=residual_clust_test;
residual_clust_test = bwareaopen(InlierClosed, 5); % remove clusters of size <5
figure('Name','residual_clust_test','NumberTitle','off');imshow(residual_clust_test);
weights = zeros(300,300);
weights(:,101:200)=residual_clust_test;
name = sprintf('%s/mask_predicted_test_%d_template.mat',outDirectory,testImNo);
save(name,'weights');
weights= load(name); 
weights = weights.weights;
resultStitched_svm = weights.*pilot_test + (1-weights).*pilot_testOnEigSpace;
figure('Name','Test resultStitched_svm','NumberTitle','off');
imshow(resultStitched_svm,[]);
figure('Name','Test_Image','NumberTitle','off');imshow(testIm);
figure('Name','Test_Image','NumberTitle','off');imshow(testIm,[]);
fistaMaxIter = 100;
numCycles = 5;
dim=size(weights);
rel_tol = 0.001; % relative target duality gap
HighQualityEigenVecs = eigenVecsSpatial;
HighQualityMeanTemplate = meanTemplateSpatial;

weights_bar = imcomplement(weights);
figure;imshow(weights_bar);

lambda1 = 1200;% 900 1200];
%lambda1List = [900];% 1000 1200];
%         for lambda1Iter = 1:length(lambda1List)

[resultWeightedPrior1] = weightedLowDose_pca(y_test,dim,angleArr,I_0,weights_bar,HighQualityEigenVecs, ...
                                                                        HighQualityMeanTemplate,alpha,lambda1,fistaMaxIter);
iter = 1
Lbar = 1000.000000
Lbar = 1100.000000
Lbar = 1210.000000
Lbar = 1331.000000
Lbar = 1464.100000
Lbar = 1610.510000
Lbar = 1771.561000
Lbar = 1948.717100
Lbar = 2143.588810
Lbar = 2357.947691
iter =   1, cost = 34056622.014175, cost decreases? YES.
iter = 2
Lbar = 2357.947691
Lbar = 2593.742460
iter =   2, cost = 13132061.973193, cost decreases? YES.
iter = 3
Lbar = 2593.742460
iter = 3
Lbar = 2853.116706
iter = 3
Lbar = 3138.428377
iter =   3, cost = 11933270.447137, cost decreases? YES.
iter = 4
Lbar = 3138.428377
iter =   4, cost = 7355246.807171, cost decreases? YES.
iter = 5
Lbar = 3138.428377
iter = 5
Lbar = 3452.271214
iter = 5
Lbar = 3797.498336
iter =   5, cost = 4437046.466896, cost decreases? YES.
iter = 6
Lbar = 3797.498336
iter =   6, cost = 2632770.888991, cost decreases? YES.
iter = 7
Lbar = 3797.498336
iter =   7, cost = 2406230.376196, cost decreases? YES.
iter = 8
Lbar = 3797.498336
iter =   8, cost = 1772277.822526, cost decreases? YES.
iter = 9
Lbar = 3797.498336
iter = 9
Lbar = 4177.248169
iter =   9, cost = 1005811.293841, cost decreases? YES.
iter = 10
Lbar = 4177.248169
iter =  10, cost = 682566.855108, cost decreases? YES.
iter = 11
Lbar = 4177.248169
Tolerance reachedfigure('Name','weighted_recon_svmWeights','NumberTitle','off');
imshow(resultWeightedPrior1,[]);
figure('Name','Test_Image','NumberTitle','off');imshow(testIm,[]);
projectionsW = radon(weights,angleArr);
figure('Name','projectionsW','NumberTitle','off');imshow(projectionsW,[]);
projectionsW_binary = imbinarize(projectionsW);
projectionsW_binary_fbp = iradon(projectionsW_binary,angleArr,'linear','Cosine');
dim = size(weights);
projectionsW_binary_fbp = projectionsW_binary_fbp(2:2+dim(1)-1,2:2+dim(2)-1);
figure('Name','projectionsW_binary_fbp','NumberTitle','off');imshow(projectionsW_binary_fbp,[]);
I_0_high = 5000;
projectionsHighDose = I_0_high*exp(-radon(testIm,angleArr));
combinedProjections = zeros(size(projectionsW_binary));
combinedProjections(projectionsW_binary==1) = projectionsHighDose(projectionsW_binary==1);
y_matrix = reshape(y_test,[(size(y_test,1))/numAngles numAngles]);
combinedProjections(projectionsW_binary==0) = y_matrix(projectionsW_binary==0);
combinedProjections = combinedProjections(:);
I_0_matrix = zeros(size(projectionsW_binary));
I_0_matrix(projectionsW_binary==1) = I_0_high;
I_0_matrix(projectionsW_binary==0) = I_0;
fistaMaxIter = 100; lambda0 = 1;
reconIrradiation = rescaled_non_linear_LSCS_I0_matrix(combinedProjections,dim,angleArr,I_0_matrix,...
                                                                                    fistaMaxIter,lambda0);
iter = 1
Lbar = 1000.000000
Lbar = 1100.000000
Lbar = 1210.000000
Lbar = 1331.000000
Lbar = 1464.100000
Lbar = 1610.510000
Lbar = 1771.561000
Lbar = 1948.717100
Lbar = 2143.588810
iter =   1, cost = 65043091.030583, cost decreases? YES.
iter = 2
Lbar = 2143.588810
Lbar = 2357.947691
Lbar = 2593.742460
Lbar = 2853.116706
iter =   2, cost = 5660682.133275, cost decreases? YES.
iter = 3
Lbar = 2853.116706
iter = 3
Lbar = 3138.428377
iter = 3
Lbar = 3452.271214
iter =   3, cost = 5118539.766510, cost decreases? YES.
iter = 4
Lbar = 3452.271214
iter =   4, cost = 2127713.796502, cost decreases? YES.
iter = 5
Lbar = 3452.271214
iter = 5
Lbar = 3797.498336
iter =   5, cost = 2051218.604832, cost decreases? YES.
iter = 6
Lbar = 3797.498336
iter =   6, cost = 1041113.493679, cost decreases? YES.
iter = 7
Lbar = 3797.498336
iter = 7
Lbar = 4177.248169
iter =   7, cost = 922888.623863, cost decreases? YES.
iter = 8
Lbar = 4177.248169
iter =   8, cost = 578001.344740, cost decreases? YES.
iter = 9
Lbar = 4177.248169
iter = 9
Lbar = 4594.972986
iter =   9, cost = 400619.558325, cost decreases? YES.
iter = 10
Lbar = 4594.972986
iter =  10, cost = 245922.622311, cost decreases? YES.
iter = 11
Lbar = 4594.972986
iter =  11, cost = 201869.807263, cost decreases? YES.
iter = 12
Lbar = 4594.972986
iter =  12, cost = 164038.527009, cost decreases? YES.
iter = 13
Lbar = 4594.972986
iter =  13, cost = 156683.457268, cost decreases? YES.
iter = 14
Lbar = 4594.972986
Tolerance reachedfigure('Name','reconIrradiation','NumberTitle','off');imshow(reconIrradiation,[]);
fistaMaxIter = 100; lambda0 = 0.1;
reconIrradiation = rescaled_non_linear_LSCS_I0_matrix(combinedProjections,dim,angleArr,I_0_matrix,...
                                                                                    fistaMaxIter,lambda0);
iter = 1
Lbar = 1000.000000
Lbar = 1100.000000
Lbar = 1210.000000
Lbar = 1331.000000
Lbar = 1464.100000
Lbar = 1610.510000
Lbar = 1771.561000
Lbar = 1948.717100
Lbar = 2143.588810
iter =   1, cost = 66710986.199981, cost decreases? YES.
iter = 2
Lbar = 2143.588810
Lbar = 2357.947691
Lbar = 2593.742460
Lbar = 2853.116706
Lbar = 3138.428377
iter =   2, cost = 4839861.383315, cost decreases? YES.
iter = 3
Lbar = 3138.428377
iter = 3
Lbar = 3452.271214
iter =   3, cost = 4795426.874659, cost decreases? YES.
iter = 4
Lbar = 3452.271214
iter =   4, cost = 1823645.858140, cost decreases? YES.
iter = 5
Lbar = 3452.271214
iter = 5
Lbar = 3797.498336
iter =   5, cost = 1787039.208960, cost decreases? YES.
iter = 6
Lbar = 3797.498336
iter =   6, cost = 867847.177474, cost decreases? YES.
iter = 7
Lbar = 3797.498336
iter = 7
Lbar = 4177.248169
iter =   7, cost = 776066.924896, cost decreases? YES.
iter = 8
Lbar = 4177.248169
iter =   8, cost = 455006.795533, cost decreases? YES.
iter = 9
Lbar = 4177.248169
iter = 9
Lbar = 4594.972986
iter =   9, cost = 332384.264604, cost decreases? YES.
iter = 10
Lbar = 4594.972986
iter =  10, cost = 207961.403527, cost decreases? YES.
iter = 11
Lbar = 4594.972986
iter =  11, cost = 190627.979695, cost decreases? YES.
iter = 12
Lbar = 4594.972986
iter =  12, cost = 158572.329014, cost decreases? YES.
iter = 13
Lbar = 4594.972986
iter = 13
Lbar = 5054.470285
iter =  13, cost = 143375.175776, cost decreases? YES.
iter = 14
Lbar = 5054.470285
Tolerance reachedfigure('Name','reconIrradiation','NumberTitle','off');imshow(reconIrradiation,[]);
result_stitched = weights.*reconIrradiation + (1-weights).*pilot_testOnEigSpace;
figure('Name','Final_stitched','NumberTitle','off');
imshow(result_stitched,[]);
figure('Name','Valid_Image','NumberTitle','off');imshow(validIm,[]);
imwrite(testIm,name);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('imwrite', '/usr/local/MATLAB/R2019a/toolbox/matlab/imagesci/imwrite.m', 448)" style="font-weight:bold">imwrite</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/matlab/imagesci/imwrite.m',448,0)">line 448</a>)
Unable to determine the file format from the file name.} 
imwrite(validIm,name);
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('imwrite', '/usr/local/MATLAB/R2019a/toolbox/matlab/imagesci/imwrite.m', 448)" style="font-weight:bold">imwrite</a> (<a href="matlab: opentoline('/usr/local/MATLAB/R2019a/toolbox/matlab/imagesci/imwrite.m',448,0)">line 448</a>)
Unable to determine the file format from the file name.} 
name = sprintf('%s/validIm.png',outDirectory);
imwrite(validIm,name);
figure('Name','Valid_Image','NumberTitle','off');imshow(validIm,[]);
validIm = mat2gray(validIm);
imwrite(validIm,name);
name = sprintf('%s/pilotn_%d_angles_%d_I_0.mat',outDirectory,numAngles,I_0);
pilot = load(name);
pilot = pilot.pilot;
figure('Name','Pilot_validIm','NumberTitle','off');imshow(pilot,[]);
name = sprintf('%s/validIm_pilot.png',outDirectory);
pilot2 = mat2gray(pilot);
imwrite(pilot2,name);
name = sprintf('%s/validIm_pilotProj.png',outDirectory);
imwrite(pilotOnEigSpace_norm,name);
name = sprintf('%s/residual_pilot_weiner.png',outDirectory);
imwrite(mat2gray(residual_weiner),name);
name = sprintf('%s/residual_valid_weiner.png',outDirectory);
imwrite(mat2gray(residual_weiner),name);
name = sprintf('%s/Actual_inlier_valid.png',outDirectory);
imwrite(mat2gray(inlier),name);
name = sprintf('%s/bin_inlier_pilot_train.png',outDirectory);
imwrite(inlierclosed,name);
name = sprintf('%s/testIm.png',outDirectory);
imwrite(mat2gray(testIm),name);
name = sprintf('%s/testIm_pilot.png',outDirectory);
imwrite(mat2gray(pilot_test),name);
name = sprintf('%s/testIm_pilotProj.png',outDirectory);
imwrite(pilot_testOnEigSpace_norm,name);
name = sprintf('%s/residual_test_weiner.png',outDirectory);
imwrite(mat2gray(residual_test_weiner),name);
name = sprintf('%s/bin_inlier_test_detected.png',outDirectory);
imwrite(detectedInlier,name);
full_detectedInlier = zeros(300,300);
full_detectedInlier(:,101:200)=detectedInlier;
name = sprintf('%s/bin_inlier_test_detected.png',outDirectory);
imwrite(full_detectedInlier,name);
name = sprintf('%s/final_weights_detected.png',outDirectory);
imwrite(weights,name);
name = sprintf('%s/final_weights_detected.png',outDirectory);
imwrite(weights,name);
name = sprintf('%s/resultStitched_svm.png',outDirectory);
imwrite(mat2gray(resultStitched_svm),name);
name = sprintf('%s/resultWeightedPrior_test.png',outDirectory);
imwrite(mat2gray(resultWeightedPrior1),name);
name = sprintf('%s/resultWeightedPrior_irradiat_test.png',outDirectory);
imwrite(mat2gray(reconIrradiation),name);
fistaMaxIter = 100; lambda0 = 0.5;
reconIrradiation = rescaled_non_linear_LSCS_I0_matrix(combinedProjections,dim,angleArr,I_0_matrix,...
                                                                                    fistaMaxIter,lambda0);
iter = 1
Lbar = 1000.000000
Lbar = 1100.000000
Lbar = 1210.000000
Lbar = 1331.000000
Lbar = 1464.100000
Lbar = 1610.510000
Lbar = 1771.561000
Lbar = 1948.717100
Lbar = 2143.588810
iter =   1, cost = 65936639.711218, cost decreases? YES.
iter = 2
Lbar = 2143.588810
Lbar = 2357.947691
Lbar = 2593.742460
Lbar = 2853.116706
Lbar = 3138.428377
iter =   2, cost = 4789020.223467, cost decreases? YES.
iter = 3
Lbar = 3138.428377
iter = 3
Lbar = 3452.271214
iter =   3, cost = 4727931.727793, cost decreases? YES.
iter = 4
Lbar = 3452.271214
iter =   4, cost = 1902045.691372, cost decreases? YES.
iter = 5
Lbar = 3452.271214
iter = 5
Lbar = 3797.498336
iter =   5, cost = 1842848.828449, cost decreases? YES.
iter = 6
Lbar = 3797.498336
iter =   6, cost = 919574.667579, cost decreases? YES.
iter = 7
Lbar = 3797.498336
iter = 7
Lbar = 4177.248169
iter =   7, cost = 816227.506965, cost decreases? YES.
iter = 8
Lbar = 4177.248169
iter =   8, cost = 494178.115526, cost decreases? YES.
iter = 9
Lbar = 4177.248169
iter = 9
Lbar = 4594.972986
iter =   9, cost = 348883.321370, cost decreases? YES.
iter = 10
Lbar = 4594.972986
iter =  10, cost = 215797.709392, cost decreases? YES.
iter = 11
Lbar = 4594.972986
iter =  11, cost = 185742.327897, cost decreases? YES.
iter = 12
Lbar = 4594.972986
iter =  12, cost = 153137.207279, cost decreases? YES.
iter = 13
Lbar = 4594.972986
iter =  13, cost = 149709.186621, cost decreases? YES.
iter = 14
Lbar = 4594.972986
Tolerance reachedfigure('Name','reconIrradiation','NumberTitle','off');imshow(reconIrradiation,[]);
name = sprintf('%s/resultWeightedPrior_irradiat_test_lamb_%f.png',outDirectory,lambda0);
imwrite(mat2gray(reconIrradiation),name);
